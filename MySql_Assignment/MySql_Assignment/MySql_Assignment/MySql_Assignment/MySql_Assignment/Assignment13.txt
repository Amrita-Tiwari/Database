                                                                                                        Assignment – 13 
                                                                                                  Using the UNION clause. 
 
1).  Create a union of two queries that shows the names, cities, and ratings of all customers. 
      Those with rating of 200 or greater will also have the words “High Rating”, while the others will have the words “Low Rating”. 
     
       
mysql> select cname,city,'High Rating'rating from customers where rating > 200
                union 
               select cname,city,'Low Rating'rating from customers where rating <= rating ;
                              cname                city                       rating      
                          ----------------------------------------------------------
                               cisneros          san jose            High Rating
                               cisneros          san jose            High Rating 
                               clemens          london               Low Rating  
                               giovanni         rome                  Low Rating
                               grass                barlin                 High Rating 
                               grass                barlin                 Low Rating 
                               hoffman         london                Low Rating  
                               liu                    san jose              Low Rating  
                               pereira           rome                   Low Rating
                                                            
                               
2).  Write a command that produces the name and number of each salesperson and each customer with more than one current order. 
       Put the results in alphabetical order. 
          mysql> select sname , salespeople.snum , cname from salespeople , customers , orders
                         where salespeople.snum = customers.snum and customers.cnum = orders.cnum 
                            group by orders.cnum having count(orders.cnum) >1
                                      union 
                        select sname , salespeople.snum , cname from salespeople , customers , orders
                        where salespeople.snum = customers.snum and customers.cnum = orders.cnum 
                         group by orders.snum having count(orders.snum) >1 
                         order by sname;                        
                               sname                   snum                   cname     
                           ----------------------------------------------------------
                               peel                       1001                   clemens
                               peel                       1001                   hoffman
                               rifkin                    1007                    cisneros
                               serres                   1002                    grass
                               serres                   1002                    liu      
                              
 3).  Form a union of three queries. Have the first select the snums of all salespeople in San Jose; 
       the second, the cnums of all customers in San Jose; and the third the onums of all orders on October 3.
       Retain duplicates between the last two queries but eliminate any redundancies between either of them and the first. 
      (Note: in the sample tables as given, there would be no such redundancy. This is besides the point.) 
          
           mysql> select snum from salespeople where city = 'san jose'
                            union
                         select cnum from customers where city = 'san jose' 
                           union 
                         select distinct snum from orders where odate like '%-10-03';
                              snum  
                           ------------
                             2003 
                             2008 
                             1007 
                             1001 
                             1004 
                             1002 